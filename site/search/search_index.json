{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. About.md # The MkDocs document generator. Features.md # The features offered in MkDocs. Home.md # The home page. img/ screenshot.png ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. About.md # The MkDocs document generator. Features.md # The features offered in MkDocs. Home.md # The home page. img/ screenshot.png ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"About/","text":"Installation PIP Installation Creating a new project The initial MkDocs layout Images Server The MkDocs live server Adding pages Theming our documentation Changing the Favicon Icon Building the site Other Commands and Options TOC Deploying Getting help Installation To install MkDocs, run the following command from the command line: PIP Installation pip install mkdocs For more details, see the Installation Guide. Creating a new project Getting started is super easy. To create a new project, run the following command from the command line: mkdocs new my-project cd my-project Take a moment to review the initial project that has been created for you. The initial MkDocs layout There's a single configuration file named mkdocs.yml, and a folder named docs that will contain your documentation source files (docs is the default value for the docs_dir configuration setting). Right now the docs folder just contains a single documentation page, named index.md. Images For adding images into pages, use the following code line: Server MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the mkdocs.yml configuration file, and then start the server by running the mkdocs serve command: $ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Open up http://127.0.0.1:8000/ in your browser, and you'll see the default home page being displayed: The MkDocs live server The dev-server also supports auto-reloading, and will rebuild your documentation whenever anything in the configuration file, documentation directory, or theme directory changes. Open the docs/index.md document in your text editor of choice, change the initial heading to MkLorum, and save your changes. Your browser will auto-reload and you should see your updated documentation immediately. Now try editing the configuration file: mkdocs.yml. Change the site_name setting to MkLorum and save the file. site_name: MkLorum site_url: https://example.com/ Your browser should immediately reload, and you'll see your new site name take effect. The site_name setting Note: The site_name and site_url configuration options are the only two required options in your configuration file. When you create a new project, the site_url option is assigned the placeholder value: https://example.com. If the final location is known, you can change the setting now to point to it. Or you may choose to leave it alone for now. Just be sure to edit it before you deploy your site to a production server. Adding pages Now add a second page to your documentation: curl 'https://jaspervdj.be/lorem-markdownum/markdown.txt' > docs/about.md As our documentation site will include some navigation headers, you may want to edit the configuration file and add some information about the order, title, and nesting of each page in the navigation header by adding a nav setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md Save your changes and you'll now see a navigation bar with Home and About items on the left as well as Search, Previous, and Next items on the right. Try the menu items and navigate back and forth between pages. Then click on Search. A search dialog will appear, allowing you to search for any text on any page. Notice that the search results include every occurrence of the search term on the site and links directly to the section of the page in which the search term appears. You get all of that with no effort or configuration on your part! Theming our documentation Now change the configuration file to alter how the documentation is displayed by changing the theme. Edit the mkdocs.yml file and add a theme setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md theme: readthedocs Save your changes, and you'll see the ReadTheDocs theme being used. Changing the Favicon Icon By default, MkDocs uses the MkDocs favicon icon. To use a different icon, create an img subdirectory in the docs directory and copy your custom favicon.ico file to that directory. MkDocs will automatically detect and use that file as your favicon icon. Building the site That's looking good. You're ready to deploy the first pass of your MkLorum documentation. First build the documentation: mkdocs build This will create a new directory, named site. Take a look inside the directory: $ ls site about fonts index.html license search.html css img js mkdocs sitemap.xml Notice that your source documentation has been output as two HTML files named index.html and about/index.html. You also have various other media that's been copied into the site directory as part of the documentation theme. You even have a sitemap.xml file and mkdocs/search_index.json. If you're using source code control such as git you probably don't want to check your documentation builds into the repository. Add a line containing site/ to your .gitignore file. echo \"site/\" >> .gitignore If you're using another source code control tool you'll want to check its documentation on how to ignore specific directories. Other Commands and Options There are various other commands and options available. For a complete list of commands, use the --help flag: mkdocs --help To view a list of options available on a given command, use the --help flag with that command. For example, to get a list of all options available for the build command run the following: mkdocs build --help TOC The code for adding a Toc, by default it is already enabled in the theme: \"[TOC]\" \"# Header 1\" \"## Header 2\" Deploying The documentation site that you just built only uses static files so you'll be able to host it from pretty much anywhere. Simply upload the contents of the entire site directory to wherever you're hosting your website from and you're done. For specific instructions on a number of common hosts, see the Deploying your Docs page. Getting help See the User Guide for more complete documentation of all of MkDocs' features. To get help with MkDocs, please use the GitHub discussions or GitHub issues.","title":"About"},{"location":"About/#installation","text":"To install MkDocs, run the following command from the command line:","title":"Installation"},{"location":"About/#pip-installation","text":"pip install mkdocs For more details, see the Installation Guide.","title":"PIP Installation"},{"location":"About/#creating-a-new-project","text":"Getting started is super easy. To create a new project, run the following command from the command line: mkdocs new my-project cd my-project Take a moment to review the initial project that has been created for you.","title":"Creating a new project"},{"location":"About/#the-initial-mkdocs-layout","text":"There's a single configuration file named mkdocs.yml, and a folder named docs that will contain your documentation source files (docs is the default value for the docs_dir configuration setting). Right now the docs folder just contains a single documentation page, named index.md.","title":"The initial MkDocs layout"},{"location":"About/#images","text":"For adding images into pages, use the following code line:","title":"Images"},{"location":"About/#server","text":"MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the mkdocs.yml configuration file, and then start the server by running the mkdocs serve command: $ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Open up http://127.0.0.1:8000/ in your browser, and you'll see the default home page being displayed:","title":"Server"},{"location":"About/#the-mkdocs-live-server","text":"The dev-server also supports auto-reloading, and will rebuild your documentation whenever anything in the configuration file, documentation directory, or theme directory changes. Open the docs/index.md document in your text editor of choice, change the initial heading to MkLorum, and save your changes. Your browser will auto-reload and you should see your updated documentation immediately. Now try editing the configuration file: mkdocs.yml. Change the site_name setting to MkLorum and save the file. site_name: MkLorum site_url: https://example.com/ Your browser should immediately reload, and you'll see your new site name take effect. The site_name setting Note: The site_name and site_url configuration options are the only two required options in your configuration file. When you create a new project, the site_url option is assigned the placeholder value: https://example.com. If the final location is known, you can change the setting now to point to it. Or you may choose to leave it alone for now. Just be sure to edit it before you deploy your site to a production server.","title":"The MkDocs live server"},{"location":"About/#adding-pages","text":"Now add a second page to your documentation: curl 'https://jaspervdj.be/lorem-markdownum/markdown.txt' > docs/about.md As our documentation site will include some navigation headers, you may want to edit the configuration file and add some information about the order, title, and nesting of each page in the navigation header by adding a nav setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md Save your changes and you'll now see a navigation bar with Home and About items on the left as well as Search, Previous, and Next items on the right. Try the menu items and navigate back and forth between pages. Then click on Search. A search dialog will appear, allowing you to search for any text on any page. Notice that the search results include every occurrence of the search term on the site and links directly to the section of the page in which the search term appears. You get all of that with no effort or configuration on your part!","title":"Adding pages"},{"location":"About/#theming-our-documentation","text":"Now change the configuration file to alter how the documentation is displayed by changing the theme. Edit the mkdocs.yml file and add a theme setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md theme: readthedocs Save your changes, and you'll see the ReadTheDocs theme being used.","title":"Theming our documentation"},{"location":"About/#changing-the-favicon-icon","text":"By default, MkDocs uses the MkDocs favicon icon. To use a different icon, create an img subdirectory in the docs directory and copy your custom favicon.ico file to that directory. MkDocs will automatically detect and use that file as your favicon icon.","title":"Changing the Favicon Icon"},{"location":"About/#building-the-site","text":"That's looking good. You're ready to deploy the first pass of your MkLorum documentation. First build the documentation: mkdocs build This will create a new directory, named site. Take a look inside the directory: $ ls site about fonts index.html license search.html css img js mkdocs sitemap.xml Notice that your source documentation has been output as two HTML files named index.html and about/index.html. You also have various other media that's been copied into the site directory as part of the documentation theme. You even have a sitemap.xml file and mkdocs/search_index.json. If you're using source code control such as git you probably don't want to check your documentation builds into the repository. Add a line containing site/ to your .gitignore file. echo \"site/\" >> .gitignore If you're using another source code control tool you'll want to check its documentation on how to ignore specific directories.","title":"Building the site"},{"location":"About/#other-commands-and-options","text":"There are various other commands and options available. For a complete list of commands, use the --help flag: mkdocs --help To view a list of options available on a given command, use the --help flag with that command. For example, to get a list of all options available for the build command run the following: mkdocs build --help","title":"Other Commands and Options"},{"location":"About/#toc","text":"The code for adding a Toc, by default it is already enabled in the theme: \"[TOC]\" \"# Header 1\" \"## Header 2\"","title":"TOC"},{"location":"About/#deploying","text":"The documentation site that you just built only uses static files so you'll be able to host it from pretty much anywhere. Simply upload the contents of the entire site directory to wherever you're hosting your website from and you're done. For specific instructions on a number of common hosts, see the Deploying your Docs page.","title":"Deploying"},{"location":"About/#getting-help","text":"See the User Guide for more complete documentation of all of MkDocs' features. To get help with MkDocs, please use the GitHub discussions or GitHub issues.","title":"Getting help"},{"location":"Features/","text":"Mkdocs has a wide range of features. The below listed features are some of the highlights: Great themes available There's a stack of good looking themes available for MkDocs. Choose between the built in themes: mkdocs and readthedocs, select one of the third-party themes listed on the MkDocs Themes wiki page, or build your own. Code Documentation The code lines can be documented easily as displayed below: /v1/public/character /v2/private/characters/pin /v3/admin/character/goag/merchadite.com Automatic Change Detection Changes to content are automatically detected and updated. Hyperlinks The links can included in the documentation using markdown language. Example: link . Easy to customize Get your project documentation looking just the way you want it by customizing your theme and/or installing some plugins. Modify Markdown's behavior with Markdown extensions. Many configuration options are available. Preview your site as you work The built-in dev-server allows you to preview your documentation as you're writing it. It will even auto-reload and refresh your browser whenever you save your changes. Host anywhere MkDocs builds completely static HTML sites that you can host on GitHub pages, Amazon S3, or anywhere else you choose.","title":"Features"},{"location":"Features/#great-themes-available","text":"There's a stack of good looking themes available for MkDocs. Choose between the built in themes: mkdocs and readthedocs, select one of the third-party themes listed on the MkDocs Themes wiki page, or build your own.","title":"Great themes available"},{"location":"Features/#code-documentation","text":"The code lines can be documented easily as displayed below: /v1/public/character /v2/private/characters/pin /v3/admin/character/goag/merchadite.com","title":"Code Documentation"},{"location":"Features/#automatic-change-detection","text":"Changes to content are automatically detected and updated.","title":"Automatic Change Detection"},{"location":"Features/#hyperlinks","text":"The links can included in the documentation using markdown language. Example: link .","title":"Hyperlinks"},{"location":"Features/#easy-to-customize","text":"Get your project documentation looking just the way you want it by customizing your theme and/or installing some plugins. Modify Markdown's behavior with Markdown extensions. Many configuration options are available.","title":"Easy to customize"},{"location":"Features/#preview-your-site-as-you-work","text":"The built-in dev-server allows you to preview your documentation as you're writing it. It will even auto-reload and refresh your browser whenever you save your changes.","title":"Preview your site as you work"},{"location":"Features/#host-anywhere","text":"MkDocs builds completely static HTML sites that you can host on GitHub pages, Amazon S3, or anywhere else you choose.","title":"Host anywhere"},{"location":"Home/","text":"What is MkDocs? ---Test--- MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.","title":"What is MkDocs?"},{"location":"Home/#what-is-mkdocs","text":"---Test--- MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.","title":"What is MkDocs?"},{"location":"page1/","text":"","title":"Page1"}]}